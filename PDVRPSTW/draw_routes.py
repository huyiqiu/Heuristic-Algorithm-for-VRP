import random
import numpy as np
import copy
from read_file import customers_info
from Vhicles import Vehicle
#from k_means import clustering
import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif']=['SimHei'] #用来正常显示中文标签
plt.rcParams['axes.unicode_minus']=False #用来正常显示负号#有中文出现的情况，需要u'内容'
customers = customers_info()

#routes = [[98, 96, 95, 94, 92, 93, 97, 99], [33, 31, 35, 37, 38, 39, 36, 34, 32], [90, 87, 86, 83, 82, 84, 85, 88, 89, 91], [55, 54, 53, 56, 58, 60, 59, 57], [5, 3, 7, 8, 10, 11, 9, 6, 4, 2, 1, 75], [81, 78, 76, 71, 70, 73, 77, 79, 80], [43, 42, 41, 40, 44, 46, 45, 48, 51, 50, 52, 49, 47], [13, 17, 18, 19, 15, 16, 14, 12], [20, 24, 25, 27, 29, 30, 28, 26, 23, 22, 21], [65, 63, 62, 74, 72, 61, 64, 68, 66, 69, 67]]
#routes = [[99, 97, 93, 92, 94, 95, 96, 98], [34, 36, 39, 38, 37, 35, 31, 33, 32], [91, 89, 88, 85, 84, 82, 83, 86, 87, 90], [57, 55, 54, 53, 56, 58, 60, 59], [75, 1, 2, 4, 3, 5, 7, 6, 8, 9, 11, 10], [81, 78, 76, 71, 70, 73, 77, 79, 80], [43, 42, 41, 40, 44, 45, 46, 48, 51, 50, 52, 49, 47], [13, 17, 15, 12, 14, 16, 19, 18], [20, 21, 22, 24, 25, 27, 29, 30, 28, 26, 23], [69, 66, 68, 64, 61, 72, 74, 62, 63, 65, 67]]
#10585.747975374852
#routes = [[99, 97, 93, 92, 94, 95, 96, 98], [32, 33, 31, 35, 37, 38, 39, 36, 34], [91, 89, 88, 85, 84, 82, 83, 86, 87, 90], [59, 57, 55, 54, 53, 56, 58, 60], [75, 3, 4, 1, 2, 6, 8, 9, 11, 10, 7, 5], [81, 78, 76, 71, 70, 73, 77, 79, 80], [43, 42, 41, 40, 44, 45, 48, 51, 50, 52, 49, 46, 47], [12, 14, 16, 15, 19, 18, 17, 13], [20, 21, 22, 23, 26, 28, 30, 29, 27, 25, 24], [69, 66, 68, 64, 61, 72, 74, 62, 63, 65, 67]]
#routes = [[12, 22, 55, 84, 101, 116, 122, 168, 155, 145, 203, 211, 231, 251, 233, 283, 303, 342, 401, 452, 404, 381, 361, 335, 398, 433, 449, 459, 468, 470, 492, 481], [19, 20, 7, 34, 54, 32, 62, 79, 92, 96, 105, 120, 137, 165, 184, 189, 200, 252, 281, 324, 395, 415, 436, 485, 480, 495, 445, 425, 400, 356, 285, 241], [16, 17, 31, 23, 45, 67, 85, 106, 95, 129, 139, 176, 183, 207, 192, 206, 214, 219, 228, 237, 244, 260, 294, 347, 364, 399, 405, 444, 478], [4, 125, 133, 236, 258, 169, 142, 94, 48, 58, 63, 93, 134, 135, 140, 249, 246, 257, 271, 265, 296, 309, 310, 320, 365, 378, 393, 410, 429, 414, 428, 437, 498, 466, 465, 477, 442], [28, 35, 50, 61, 44, 33, 10, 89, 111, 123, 124, 126, 161, 164, 178, 196, 194, 213, 220, 216, 242, 263, 279, 290, 299, 300, 333, 311, 308, 341, 345, 355, 377, 418, 494, 469, 426], [41, 29, 8, 11, 47, 83, 127, 81, 117, 153, 201, 195, 193, 179, 209, 217, 264, 289, 295, 328, 334, 360, 440, 488, 486, 441, 432, 419, 420, 412, 353, 348, 323, 305], [15, 18, 1, 38, 42, 57, 66, 70, 91, 76, 100, 113, 136, 143, 191, 202, 215, 275, 302, 325, 376, 374, 403, 402, 416, 472, 489, 493, 446], [9, 5, 60, 132, 138, 150, 109, 103, 87, 52, 26, 49, 177, 185, 212, 250, 255, 261, 269, 272, 280, 277, 286, 306, 327, 316, 339, 346, 363, 390, 387, 389, 397, 411, 457, 479, 487, 490, 431], [39, 51, 90, 99, 108, 121, 130, 182, 198, 199, 218, 229, 232, 259, 256, 235, 230, 254, 291, 301, 322, 326, 297, 340, 368, 383, 388, 382, 370, 367, 349, 359, 380, 409, 421, 422, 434, 454, 458, 475, 482, 497, 483], [21, 2, 13, 40, 53, 158, 160, 162, 167, 171, 77, 147, 157, 159, 205, 243, 240, 247, 288, 278, 284, 331, 336, 354, 366, 407, 443, 467, 484, 499, 471, 453, 447, 455], [59, 72, 3, 14, 37, 30, 43, 80, 102, 141, 186, 170, 144, 172, 248, 234, 226, 224, 266, 270, 304, 298, 321, 351, 357, 379, 435, 461, 476, 491, 464, 439, 463], [78, 112, 146, 118, 114, 107, 104, 98, 75, 25, 115, 173, 197, 208, 188, 187, 223, 238, 245, 262, 273, 274, 293, 292, 337, 317, 338, 369, 384, 386, 423, 408, 391, 413, 427, 473, 460], [6, 24, 46, 56, 68, 86, 82, 74, 88, 110, 119, 131, 149, 151, 163, 166, 175, 181, 204, 227, 225, 276, 287, 307, 318, 221, 268, 332, 343, 344, 352, 373, 358, 385, 406, 462, 438, 430, 424, 396], [36, 27, 64, 65, 69, 71, 73, 97, 128, 156, 152, 154, 174, 210, 222, 239, 148, 180, 190, 253, 267, 282, 315, 330, 329, 313, 312, 319, 314, 350, 362, 375, 372, 371, 394, 392, 417, 448, 456, 496, 474, 451, 450]]
#80596.64500396905
#835.6454065580951
#routes = [[50, 35, 89, 28, 33, 4, 93, 48, 58, 44], [26, 41, 78, 81, 29, 11, 47, 8, 83, 32, 92, 20, 34, 54, 19], [12, 55, 53, 25, 75, 98, 21, 2, 13, 40, 77, 90, 39, 99, 51], [36, 64, 97, 71, 65, 73, 27, 69, 22, 84], [67, 72, 43, 3, 30, 14, 95, 62, 79, 7, 96, 45, 23], [18, 38, 76, 15, 94, 70, 59, 80, 66, 1, 57, 42], [63, 24, 86, 6, 46, 82, 56, 68, 88, 74], [60, 9, 5, 52, 87, 49, 31, 37, 17, 85, 16, 91, 10, 61]]
#14057.98067486483
#routes = [[481, 251, 84, 433, 233, 381, 303, 22, 449, 122, 168, 401, 452, 283, 404, 342, 361, 459, 468, 55, 116, 470, 335, 231, 492, 203, 145, 211, 12, 101, 155, 398], [495, 165, 200, 241, 356, 120, 7, 281, 480, 105, 252, 96, 189, 62, 79, 137, 436, 32, 92, 415, 485, 324, 395, 184, 19, 54, 20, 34, 285, 425, 400, 445], [237, 405, 206, 16, 294, 85, 399, 260, 67, 176, 129, 45, 244, 95, 183, 478, 23, 207, 139, 17, 228, 219, 214, 444, 347, 364, 106, 31, 192], [58, 414, 48, 4, 93, 271, 246, 134, 437, 257, 498, 63, 428, 135, 310, 465, 133, 140, 320, 477, 378, 365, 429, 442, 94, 258, 142, 236, 125, 249, 466, 296, 393, 309, 265, 410, 169], [426, 161, 111, 123, 164, 263, 290, 220, 299, 124, 355, 341, 61, 311, 10, 216, 126, 377, 333, 418, 194, 300, 279, 44, 213, 196, 33, 178, 28, 89, 345, 35, 50, 242, 308, 469, 494], [488, 360, 83, 440, 295, 47, 11, 127, 179, 8, 328, 217, 193, 334, 289, 419, 209, 195, 29, 432, 323, 81, 153, 412, 117, 305, 201, 441, 41, 486, 264, 420, 348, 353], [91, 191, 143, 446, 18, 402, 416, 113, 42, 57, 38, 275, 215, 15, 70, 202, 325, 376, 76, 66, 472, 1, 493, 489, 403, 374, 302, 100, 136], [60, 132, 272, 250, 212, 306, 327, 185, 9, 5, 479, 52, 138, 280, 87, 339, 150, 411, 103, 109, 269, 397, 389, 490, 346, 261, 177, 49, 26, 431, 387, 487, 255, 390, 316, 277, 286, 457, 363], [99, 51, 291, 349, 108, 367, 370, 434, 340, 383, 232, 368, 259, 297, 497, 382, 458, 39, 256, 230, 388, 121, 409, 475, 235, 301, 380, 182, 254, 359, 421, 130, 322, 326, 482, 422, 454, 90, 199, 198, 483, 229, 218], [407, 171, 21, 2, 366, 167, 443, 354, 247, 13, 157, 278, 243, 159, 453, 471, 499, 77, 331, 40, 240, 467, 147, 160, 336, 158, 162, 53, 288, 455, 284, 205, 447, 484], [186, 270, 14, 170, 379, 461, 491, 30, 351, 3, 435, 266, 476, 141, 304, 37, 321, 224, 43, 226, 464, 72, 102, 248, 172, 59, 463, 144, 298, 234, 80, 357, 439], [238, 274, 146, 473, 98, 208, 118, 408, 337, 114, 391, 107, 25, 115, 369, 293, 223, 427, 292, 187, 413, 104, 384, 317, 188, 338, 262, 273, 78, 112, 423, 386, 245, 173, 75, 460, 197], [358, 74, 373, 175, 88, 181, 56, 68, 204, 396, 221, 82, 276, 151, 424, 149, 287, 430, 462, 6, 86, 438, 227, 352, 307, 225, 24, 163, 343, 131, 344, 406, 332, 119, 268, 318, 46, 110, 166, 385], [315, 222, 448, 282, 314, 190, 36, 375, 350, 239, 180, 474, 73, 253, 313, 319, 65, 450, 392, 362, 417, 451, 71, 97, 64, 148, 372, 267, 456, 156, 152, 174, 330, 496, 128, 154, 210, 371, 329, 27, 394, 312, 69]]
#37980.510493605594
#routes = [[91, 52, 479, 138, 280, 87, 294, 16, 85, 399, 206, 219, 214, 405, 339, 150, 237, 192, 31, 106, 411, 103, 109, 269, 397, 389, 272, 261, 431, 277, 286, 250, 363, 132, 5], [111, 123, 164, 50, 196, 263, 290, 220, 333, 418, 300, 279, 213, 44, 58, 414, 48, 265, 309, 393, 410, 169, 178, 33, 28, 35, 345, 89, 191, 143, 242, 308, 299], [283, 232, 383, 340, 297, 229, 218, 447, 455, 467, 453, 454, 422, 482, 326, 322, 130, 199, 198, 434, 458, 382, 39, 421, 359, 254, 182, 256, 380, 301, 235, 367, 108, 349, 291, 452, 409, 370, 121, 230, 388, 368, 401, 404], [423, 201, 305, 441, 193, 117, 386, 112, 78, 273, 262, 338, 412, 153, 81, 323, 432, 29, 195, 419, 209, 11, 47, 295, 440, 8, 127, 179, 289, 334, 328, 217, 486, 41, 353, 460], [361, 53, 407, 288, 342, 259, 331, 284, 205, 77, 90, 159, 243, 278, 157, 13, 247, 354, 167, 366, 160, 443, 147, 40, 240, 162, 158, 336, 2, 21, 171, 337, 408, 274, 413, 427], [451, 448, 156, 456, 175, 373, 74, 221, 151, 82, 276, 88, 396, 204, 68, 181, 56, 149, 424, 287, 430, 86, 438, 227, 352, 6, 462, 163, 225, 307, 24, 131, 344, 406, 332, 343, 46, 318, 110, 166, 385, 358], [357, 80, 102, 72, 464, 226, 298, 234, 43, 224, 321, 37, 141, 266, 304, 435, 3, 351, 30, 476, 491, 461, 500], [60, 212, 457, 487, 293, 101, 306, 327, 398, 185, 9, 426, 469, 161, 341, 355, 124, 126, 377, 381, 216, 10, 61, 311, 251, 481, 155, 84, 233, 433, 55, 468, 449, 450, 475, 471, 483, 484, 459, 470, 492], [445, 400, 425, 495, 241, 356, 348, 420, 200, 165, 19, 54, 285, 34, 20, 281, 120, 7, 105, 79, 137, 436, 32, 92, 415, 83, 360, 324, 395, 184, 264, 473, 26, 346], [122, 168, 22, 303, 69, 180, 474, 392, 362, 417, 375, 71, 319, 65, 313, 253, 73, 312, 394, 27, 315, 51, 99, 329, 371, 222, 210, 154, 128, 330, 174, 152, 267, 372, 64, 148, 97, 282, 314, 190, 36, 350, 194, 239], [12, 211, 335, 116, 231, 203, 145, 223, 292, 187, 104, 107, 391, 114, 118, 188, 208, 98, 245, 173, 75, 317, 146, 384, 25, 115, 238, 197, 369, 390, 316, 255, 387, 49, 177], [18, 446, 402, 416, 113, 215, 258, 15, 376, 325, 202, 70, 463, 59, 144, 172, 248, 66, 472, 1, 76, 275, 38, 57, 493, 42, 489, 403, 374, 302, 100, 136, 494], [228, 17, 139, 67, 260, 439, 176, 129, 45, 244, 183, 478, 23, 207, 444, 347, 480, 252, 364, 96, 95, 379, 170, 14, 488, 189, 270, 186, 62, 485, 490], [296, 466, 4, 93, 271, 246, 134, 437, 428, 135, 310, 249, 125, 142, 236, 94, 442, 429, 378, 477, 365, 465, 133, 140, 320, 63, 257, 498, 119, 268, 496, 497, 499]]
#41508.792316742954
#c101
routes = [[99, 96, 95, 93, 92, 94, 97, 98], [32, 31, 33, 35, 37, 38, 39, 36, 34], [91, 89, 88, 82, 83, 84, 85, 86, 87, 90], [57, 59, 60, 58, 56, 54, 53, 55], [10, 11, 8, 9, 6, 4, 2, 1, 75, 5, 3, 7], [80, 77, 73, 70, 71, 76, 78, 79, 81], [43, 41, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], [13, 15, 12, 14, 16, 19, 18, 17], [20, 21, 22, 23, 26, 28, 30, 29, 27, 25, 24], [67, 66, 68, 69, 74, 72, 63, 62, 61, 64, 65]]
#895.7179857543923#879.7127882731874
plt.figure(figsize=(10, 10))
plt.plot(customers[0][1], customers[0][2], '.',markersize = 8, color='red')
colors = ['#0085c3', 'orange', 'yellow', 'green', 'blue', 'darkgray', 'deeppink', 'black', 'brown', 'purple','lightgreen','plum','royalblue','slategrey','indigo']
for i in range(len(routes)):
    for j in range(len(routes[i])):
        if customers[routes[i][j]][3] == 0:
            plt.plot(customers[routes[i][j]][1], customers[routes[i][j]][2], '^',markersize=4, color=colors[i])
        elif customers[routes[i][j]][4] == 0:
            plt.plot(customers[routes[i][j]][1], customers[routes[i][j]][2], 's', markersize=4, color=colors[i])
        else:
            plt.plot(customers[routes[i][j]][1], customers[routes[i][j]][2], '.', markersize=4, color=colors[i])

def calculate_cost(individual):
    vehicles = []
    temp = copy.deepcopy(individual)
    while len(temp) > 0:
        now_take = 0
        temp_rout = []
        v = Vehicle()
        for i in temp:
            if customers[i][3] + now_take <= v.load:
                now_take += customers[i][3]
                temp_rout.append(i)
            else:
                break
        for j in temp_rout:
            v.rout.append(j)
            if now_take - customers[j][3] + customers[j][4] <= v.load:
                now_take = now_take - customers[j][3] + customers[j][4]
            else:
                break
        v.rout.append(0)
        vehicles.append(v)
        for i in v.rout:
            if i in temp:
                temp.remove(i)
    cost = 0
    for vehicle in vehicles:
        vehicle.rout_cost()
        cost += vehicle.totalcost
    return vehicles

def print_info(vehicles):
    dist = 0
    cost = 0
    for vehicle in vehicles:
        print("路径：")
        print(vehicle.rout)
        print(vehicle.rout[0], end=" ")
        for i in range(1, len(vehicle.rout)):
            print("->", vehicle.rout[i], end=" ")
        vehicle.rout_cost()
        #print("行驶成本：", vehicle.travel_cost, "行驶距离：",vehicle.travel_dist, " 惩罚成本：", vehicle.punish_cost, " 总成本：", vehicle.totalcost)
        print("行驶距离：", vehicle.travel_dist, " 总成本：",vehicle.totalcost)
        dist += vehicle.travel_dist
        cost += vehicle.totalcost
    return dist, cost

TOTAL_DIST = 0
TOTAL_COST = 0
nc = 0

for i in range(len(routes)):
    v = calculate_cost(routes[i])
    for vehicle in v:
        for i in range(len(vehicle.rout) - 1):
            start = (customers[vehicle.rout[i]][1], customers[vehicle.rout[i + 1]][1])
            end = (customers[vehicle.rout[i]][2], customers[vehicle.rout[i + 1]][2])
            plt.plot(start, end, color=colors[nc])
    nc += 1
    d, c = print_info(v)
    TOTAL_DIST += d
    TOTAL_COST += c

print("TOTAL_DIST:", TOTAL_DIST, "TOTAL_COST:", TOTAL_COST)
plt.show()




